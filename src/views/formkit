<script setup>
const submitHandler =  () => {
  alert("Form Submited");
}

const _event="test";
const year=2024;
const form=[
  { question: 'event', type: 'hidden', value: _event },
  { question: 'event', type: 'hidden', value: year },
  { question: 'Team number', type: 'autocomplete', options: ["695","2000"], value:"" },
  { question: 'Type of drive train', type: 'radio', options: ['Tank Drive ("skid steer", plates on both sides of wheels)', "West Coast Drive (wheels mounted off one side of tube)", "Swerve Drive"], value:"",  src: "https://lh7-us.googleusercontent.com/pUWvHrPDa5IfrQcFalk4lO0e4PhD3sLMP0jyLJU8PTWWGfw5r-Wa4qDQNHhbu0byYLzXScP5lfTSUCsvbNI-FlwDY2L7Ra0-TgYqf5Eabw0INSFE3ah4QCqCqHFrsaPKyCOt8m2Yo-H2ie9E7apzh6c8AO147A", w: "50%" },
  { question: 'Type of wheels used', type: 'radio', options: ["Traction","Mecanum (rollers at 45° angle)","Omni (rollers at 90° angle)"], value:"", src: "https://lh7-us.googleusercontent.com/PCI7CaG88MiY50L7AM0CVTs9dRd3NQgqW4B2rd64vmjHaNDMEHR0EkWYqv-rzHBnGBC08NzWtr7W97lIk226Q9WVCPuTKuOSZcpb6eyNC5Q3HGmFQwp8005gRcxiS09RjeWUJQJTK-vQGDWd0QAbpSipLSkExw", w: "100%"},
  { question: 'Intake Use:', type: 'checkbox', options: ["Ground","Station"], value:[] },
  { question: 'Scoring Locations:', type: 'checkbox', options: ["Amp","Speaker","Trap","Hang"], value:[] },
  { question: 'Robot Weight', type: 'number', value:"" },
  { question: 'Robot Dimension (Length in Inches) without bumpers - front to back', type: 'number', value:"" },//might need to be text
  { question: 'Robot Dimension (Width in Inches) without bumpers - left to right', type: 'number', value:"" },//might need to be text
  { question: 'Robot Dimension (Height in Inches) from floor to highest point on robot at the start of the match', type: 'number', value:"" },//might need to be text
  { question: 'Drive Team Members', type: 'radio', options: ["One person driving and operating the robot during a match","One person driving and One person operating the robot during a match","Other"], value:"" },
  { question: 'Hours/Weeks of Practice', type: 'text', value:"" },
  { question: 'Picture - Full Robot', type: 'file', value:"" },
  { question: 'Picture - Drive Train', type: 'file', value:"" },
  { question: 'Additional Comments', type: 'textarea', value:"" }
];

</script>

<template>
  <h1>Pit Scouting Form</h1>
  <FormKit
  type="form"
  submit-label="Submit"
  @submit="submitHandler"
  #default="{ value }"
  >
    <div
      v-for="(item, index) in form"
      :key="index"
    >
      <img v-if="typeof item.src === 'string'" :src="item.src" alt="Error" :width="item.w" />
      <FormKit
        v-if="item.type==='hidden'"
        :name="item.question"
        type="hidden"
        :value="item.value"
      />
      <FormKit
        v-else-if="item.type==='autocomplete'"
        type="autocomplete"
        :name="item.question"
        :label="item.question"
        :options="item.options"
        placeholder="Team #"
        popover
        :filter="
          (option, search) =>
            option.label.toLowerCase().startsWith(search.toLowerCase())
        "
        validation="required"
        v-model="item.value"
      />
      <FormKit
        v-else-if="item.type==='radio'"
        type="radio"
        :label="item.question"
        :options="item.options"
        validation="required"
        :name="item.question"
        v-model="item.value"
      />
      <FormKit
        v-else-if="item.type==='checkbox'"
        :label="item.question"
        type="checkbox"
        :options="item.options"
        :name="item.question"
        v-model="item.value"
      />
      <FormKit
        v-else-if="item.type==='number'"
        type="text"
        :name="item.question"
        :label="item.question"
        :validation="[ ['required'], ['matches', /^\d+(\s\d+\/\d+)?(\.\d+)?$|^\d+\/\d+$/] ]"
        :validation-messages="{
          matches: 'Valid forms: _ , _._ , n/d , _ n/d',
        }"
        v-model="item.value"
      />
      <FormKit
        v-else-if="item.type==='text'"
        :label="item.question"
        :name="item.question"
        type="text"
        validation="required"
        v-model="item.value"
      />
      <FormKit
        v-else-if="item.type==='file'"
        :name="item.question"
        :type="item.type"
        :label="item.question"
        accept=".png,.jpg,.jpeg,.dng,.heif,.heic"
        v-model="item.value"
        validation="required"
      />
      <FormKit
        v-else-if="item.type==='textarea'"
        :type="item.type"
        :name="item.question"
        :label="item.question"
        validation="length:0,120"
        validation-visibility="live"
        v-model="item.value"
      />
    </div>
    <pre wrap>{{value}}</pre>
  </FormKit>
  <br/>
</template>
